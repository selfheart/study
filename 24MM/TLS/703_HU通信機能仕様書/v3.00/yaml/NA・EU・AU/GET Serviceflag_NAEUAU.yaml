openapi: 3.0.3
info:
  title: GET Serviceflag API
  description: サービスフラグ取得のAPI
  version: 1.70.0
#######################################################
# history
# 
# 0.0.1
#  HUCOM仕様書v1.00をもとにGETリクエストを作成
# 
# 0.0.2
#  HUCOM仕様書v1.10をもとにGETリクエストを修正
#
# 1.50.0
#  HUCOM仕様書v1.50をもとにGETリクエストを修正
#  Modified GET serviceflags request based on HUCOM spec v1.50
#
# 1.70.0
#  HUCOM仕様書v1.70をもとにGETリクエストを修正
#  Modified GET serviceflags request based on HUCOM spec v1.70
#######################################################

servers: #Add url, 2022/9/16, 1RF7G Yoshida
  - url: https://sms-24mm.qa.connectedtech.io
    description: NA Trial URL

  - url: https://sms-24mm.qa.euconnectedtech.io
    description: EU Trial URL

  - url: https://sms-24mm.qa.auconnectedtech.io
    description: AU Trial URL

  #Add PreProd URL, 2023/3/14, 1RF7G Yoshida
  - url: https://sms-24mm.preprod.connectedtech.io
    description: NA PreProd URL

  #Add PreProd URL, 2023/3/14, 1RF7G Yoshida
  - url: https://sms-24mm.preprod.euconnectedtech.io
    description: EU PreProd URL

  #Add PreProd URL, 2023/3/14, 1RF7G Yoshida
  - url: https://sms-24mm.preprod.auconnectedtech.io
    description: AU PreProd URL

  #Add Prod URL, 2023/3/14, 1RF7G Yoshida
  - url: https://sms-24mm.connectedtech.io
    description: NA Prod URL

  #Add Prod URL, 2023/3/14, 1RF7G Yoshida
  - url: https://sms-24mm.euconnectedtech.io
    description: EU Prod URL

  #Add Prod URL, 2023/3/14, 1RF7G Yoshida
  - url: https://sms-24mm.auconnectedtech.io
    description: AU Prod URL

#Modify paths, 2023/3/14, 1RF7G Yoshida
paths:
  /flags:

    get:
      description:
        サーバからサービスフラグを取得するためのAPI / <br>
        GET serviceflags
      summary: サーバからサービスフラグを取得するためのAPI / GET serviceflags
      operationId: download
      parameters:
        - in: query
          name: Cbtag # Modify query name, 2022/9/20, 1RF7G Yoshida
          description: サーバ側が機能情報リカバリに利用するクエリーパラメータ。 <br>
            リカバリの仕組みについてはProvision_020_070を参照。 <br>
            例）機能情報正常の場合、「Cbtag=vinと日時で生成したハッシュ値」 <br>
            機能情報異常の場合、「Cbtag=Z1」/ <br>
            Information for server side to recover function information. <br>
            Refer Provision_020_070 for the recovery mechanism. <br>
            ex) If function information is normal, "Hash value generated by Cbtag=vin and date and time". <br>
            For function information failure "Cbtag=Z1".
          schema:
            type: string
            # Add min and max, 2022/8/30, 1RF7G Yoshida
            minLength: 0
            maxLength: 256
            example: 3053308c306f30b530f330d730eb306e65875b57521730673059
        - in: header
          name: User-Agent
          description:
            User-Agentの文字列には情報管理キーを設定する / <br>
            Set the information management key in the User-Agent character string.
          schema:
            type: string
            # 2022/8/30 6桁に修正, 1RF7G Yoshida
            # 2022/8/30 Corrected to 6 digits, 1RF7G Yoshida
            minLength: 6
            maxLength: 6
            example: "TA1TJP"
          required: true
        - in: header
          name: x-vin
          description:
            x-vinにはVIN情報を設定する / <br>
            Set VIN information in x-vin.
          schema:
            type: string
            minLength: 1
            maxLength: 17
            example: "12345678901234567"
          required: true
        - in: header
          name: DATE
          description: RFC2616 3.3.1章の「rfc1123-date」の形式に従う / <br>
            Follow the format rfc1123-date in chapter 3.3.1 of the RFC2616.
          schema:
            type: string
            minLength: 1
            maxLength: 30
            example: "Sun, 06 Nov 1994 08:49:37 GMT"
          required: true
        - in: header
          name: Accept-Encoding
          description: Accept-Encodingの値はgzipに対応する / <br>
            Set gzip in Accept-Encoding.
          schema:
            type: string
            minLength: 1
            maxLength: 10
            example: "gzip"
          required: true

        - in: header
          name: If-None-Match
          description:
            ETag値のアップロード <br>
            ETag値を保持している場合は必須 / <br>
            Upload Entity tag. <br>
            Required if HU has Etag value.
          schema:
            type: string
            minLength: 1
            maxLength: 256
            # 2022/8/30 Provision_010_090に従って最大Lengthを256byteで設定, 1RF7G Yoshida
            # 2022/8/30 Set the maximum length to 256 bytes according to Provision_010_090, 1RF7G Yoshida
            example: fd2cfc96fd51b0b48bb952d2fe25147016e62940

      responses:
        'default':
          description:
            レスポンスステータスコードとコードごとの対処はHUCOM仕様書に従う <br>
            正常応答とヘッダを返すエラーコードのみ定義する <br>
            HUCOM仕様書に従わない場合は、機能仕様を定義すること / <br>
            Follow the HUCOM spec for response status code and how to handle each status code. <br>
            Define normal response and error code that return header. <br>
            Define function specification if do not follow HUCOM specification.

        '200':
          description: # Add discription, 2022/9/21, 1RF7G Yoshida
            ETagが一致しない場合の成功レスポンス <br>
            Reason-Phrase = OK <br>
            703仕様書 srvflg.protoの「message ServiceFlag」参照 / <br>
            Success response when ETags do not match. <br>
            Reason-Phrase = OK <br>
            Refer to "message ServiceFlag" in "srvflg.proto" of 703 spec.
          headers:
            ETag:
              description: Entity tag
              schema:
                type: string
                example: fd2cfc96fd51b0b48bb952d2fe25147016e62940
          content:
            application/x-protobuf:
              schema:
                description: 詳細はHUCOM仕様書Ver.1.00 「srvflg.proto」のServiceFlagを参照 / <br>
                  Refer ServiceFlag in srvflg.proto of the HUCOM specification ver.1.10 for more information.
                type: string
                example: map<string, string>
        '304':
          description:
            ETagが一致した場合の成功レスポンス <br>
            Reason-Phrase = Not Modified / <br>
            Success response when ETags match Not Modified. <br>
            Reason-Phrase = Not Modified
          content: { }
        '4XX': # Add status code, 2022/9/16, TC Hotta
          description:
            クライアントエラー全般。 リトライは不要。 <br>
            703仕様書「HUCOM Communication Spec」のHUCOM_070_010と表3参照。 / <br>
            General client error. No retry required. <br>
            Refer to HUCOM_070_ 010 and Table 3 in the "HUCOM Communication Spec" of the 703 spec.
          content: { }
        '401': # Modify description, 2022/8/30, 1RF7G Yoshida
          description: 
            VIN-Certマッピングエラー。 <br>
            HUはHUCOM仕様書に従い、これを受けてもリトライしない。/ <br>
            VIN-Cert mapping error. <br>
            HU follows the HUCOM specifications and does not retry even if this is received.
          content: { }
        '428':
          description:
            サーバから機能情報のアップロードを要求する場合のレスポンス / <br>
            Server requests H/U to upload function information.
          content: { }
        "5XX": # Add status code, 2022/9/16, TC Hotta
          description:
            サーバーエラー全般。一時的なエラーも含むため車両はリトライを実施する。 <br>
            703仕様書「HUCOM Communication Spec」のHUCOM_070_010と表3参照。  / <br>
            General Server Error. The vehicle will retry because it may be temporary. <br>
            Refer to HUCOM_070_ 010 and Table 3 in the "HUCOM Communication Spec" of the 703 spec.
          content: { }
        '503':
          description: サーバエラーによるレスポンス。 Service Unavailable。 <br>
            Retry-Afterにリトライ間隔(秒)を指定する <br>
            HUCOM仕様書でRetry-Agterは503で指定するように記載している <br>
            Server error response. Service Unavailable. <br>
            Specify the retry interval (seconds) for Retry-After. <br>
            The HUCOM specification states that Retry-After should be specified by 503.
          headers:
            Retry-After:
              description: delay second
              schema:
              # Change schema from integer to string, 2023/1/23, 1RF5G Yoshida
                type: string
                example: 600
          content: { }

    head:
      description:
        サーバにサービスフラグ取得の完了を通知するためのAPI / <br>
        ServiceflagACK
      summary: サーバにサービスフラグ取得の完了を通知するためのAPI / ServiceflagACK.
      operationId: serviceflagack
      parameters:
        - in: query
          name: Cbtag # Modify query name, 2022/9/20, 1RF7G Yoshida
          description: サーバ側が機能情報リカバリに利用するクエリーパラメータ。 <br>
            リカバリの仕組みについてはProvision_020_070を参照。 <br>
            例）機能情報正常の場合、「Cbtag=vinと日時で生成したハッシュ値」 <br>
            機能情報異常の場合、「Cbtag=Z1」/ <br>
            Information for server side to recover function information. <br>
            Refer Provision_020_070 for the recovery mechanism. <br>
            ex) If function information is normal, "Hash value generated by Cbtag=vin and date and time". <br>
            For function information failure "Cbtag=Z1".
          schema:
            type: string
            # Add min and max, 2022/8/30, 1RF7G Yoshida
            minLength: 0
            maxLength: 256
            example: 3053308c306f30b530f330d730eb306e65875b57521730673059
        - in: header
          name: User-Agent
          description:
            User-Agentの文字列には情報管理キーを設定する / <br>
            Set the information management key in the User-Agent character string.
          schema:
            type: string
            # 2022/8/30 6桁に修正, 1RF7G Yoshida
            # 2022/8/30 Corrected to 6 digits, 1RF7G Yoshida
            minLength: 6
            maxLength: 6
            example: "TA1TJP"
          required: true
        - in: header
          name: x-vin
          description:
            x-vinにはVIN情報を設定する /
            Set VIN information in x-vin.
          schema:
            type: string
            minLength: 1
            maxLength: 17
            example: "12345678901234567"
          required: true
        - in: header
          name: DATE
          description: RFC2616 3.3.1章の「rfc1123-date」の形式に従う
            Follow the format rfc1123-date in chapter 3.3.1 of the RFC2616.
          schema:
            type: string
            minLength: 1
            maxLength: 30
            example: "Sun, 06 Nov 1994 08:49:37 GMT"
          required: true
        - in: header
          name: Accept-Encoding
          description: Accept-Encodingの値はgzipに対応する /
            Set gzip in Accept-Encoding.
          schema:
            type: string
            minLength: 1
            maxLength: 10
            example: "gzip"
          required: true
        - in: header
          name: If-None-Match
          description:
            サービスフラグ取得のレスポンスで設定されたETag値のアップロード
            ServiceflagACKの場合は必須 /
            Upload Entity tag retrieved in the previous get serviceflags response.
            Required for ServiceflagACK.
          schema:
            type: string
            minLength: 1
            maxLength: 256
            # 2022/8/30 Provision_010_090に従って最大Lengthを256byteで設定, 1RF7G Yoshida
            # 2022/8/30 Set the maximum length to 256 bytes according to Provision_010_090, 1RF7G Yoshida
            example: fd2cfc96fd51b0b48bb952d2fe25147016e62940
          required: true

      responses:
        'default':
          description: レスポンスステータスコードとコードごとの対処はHUCOM仕様書に従う <br>
            正常応答とヘッダを返すエラーコードのみ定義する <br>
            HUCOM仕様書に従わない場合は、機能仕様を定義すること / <br>
            Follow the HUCOM spec for response status code and how to handle each status code. <br>
            Define normal response and error code that return header. <br>
            Define function specification if do not follow HUCOM specification.
        '200':
          description: # Add description, 2022/9/21, 1RF7G Yoshida
            サーバがServiceflagACKを受信した場合の成功レスポンス <br>
            HEADリクエストのレスポンスにボディは設定されない <br>
            サーバからの応答にEtagは付与されない（付与されていてもHUは無視する） <br>
            「Provisioning sequence」のSeq03_サービスフラグ取得を参照。 <br>
            Reason-Phrase = OK / <br>
            Success response when server receive ServiceflagACK. <br>
            There is no response body in HEAD method response. <br>
            There is no Etag value in HEAD method response（HU ignore this Etag value). <br>
            Refer to Seq_03_Get service flags in "Provisioning sequence". <br>
            Reason-Phrase = OK
          content: { }
        # Delete status, 2022/9/16, 1RF7G Yoshida
        #'304':
        #  description:
        #    ETagが一致した場合の成功レスポンス
        #    Reason-Phrase = Not Modified /
        #    Success response when ETags match Not Modified
        #    Reason-Phrase = Not Modified
        #  content: { }
        '4XX': # Add status code, 2022/9/20, 1RF7G Yoshida
          description:
            クライアントエラー全般。 リトライは不要。 <br>
            703仕様書「HUCOM Communication Spec」のHUCOM_070_010と表3参照。 / <br>
            General client error. No retry required. <br>
            Refer to HUCOM_070_ 010 and Table 3 in the "HUCOM Communication Spec" of the 703 spec. <br>
          content: { }
        '401': # Add status code, 2022/9/20, 1RF7G Yoshida
          description:
            VIN-Certマッピングエラー。<br>
            HUはHUCOM仕様書に従い、これを受けてもリトライしない。/ <br>
            VIN-Cert mapping error. <br>
            HU follows the HUCOM specifications and does not retry even if this is received. <br>
          content: { }
        "5XX": # Add status code, 2022/9/20, TC Hotta
          description:
            サーバーエラー全般。一時的なエラーも含むため車両はリトライを実施する。 <br>
            703仕様書「HUCOM Communication Spec」のHUCOM_070_010と表3参照。  / <br>
            General Server Error. The vehicle will retry because it may be temporary. <br>
            Refer to HUCOM_070_ 010 and Table 3 in the "HUCOM Communication Spec" of the 703 spec. <br>
        '503':
          description: サーバエラーによるレスポンス Service Unavailable <br>
            Retry-Afterにリトライ間隔(秒)を指定する <br>
            HUCOM仕様書でRetry-Agterは503で指定するように記載している <br>
            Server error response. <br>
            Specify the retry interval (seconds) for Retry-After. <br>
            The HUCOM specification states that Retry-Agter should be specified by 503. <br>
          headers:
            Retry-After:
              description: delay second
              schema:
              # Change schema from integer to string, 2023/1/23, 1RF5G Yoshida
                type: string
                example: 600
          content: { }
